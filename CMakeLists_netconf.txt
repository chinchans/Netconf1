cmake_minimum_required(VERSION 3.10)
project(o1_netconf_interface)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)

# Find required packages
find_package(PkgConfig REQUIRED)
find_package(OpenSSL REQUIRED)
find_package(LibSSH REQUIRED)

# Find libnetconf2 and libyang (compatible versions)
pkg_check_modules(LIBNETCONF2 REQUIRED libnetconf2)
pkg_check_modules(LIBYANG REQUIRED libyang)

# Include directories
include_directories(${LIBNETCONF2_INCLUDE_DIRS})
include_directories(${LIBYANG_INCLUDE_DIRS})
include_directories(${OPENSSL_INCLUDE_DIR})

# Add compiler flags
add_compile_options(${LIBNETCONF2_CFLAGS_OTHER})
add_compile_options(${LIBYANG_CFLAGS_OTHER})

# O1 NETCONF Server executable
add_executable(o1_netconf_server
    src/o1_netconf_server.c
)

# O1 NETCONF Client executable
add_executable(o1_netconf_client
    src/o1_netconf_client.c
)

# Link libraries for O1 server
target_link_libraries(o1_netconf_server
    ${LIBNETCONF2_LIBRARIES}
    ${LIBYANG_LIBRARIES}
    ${OPENSSL_LIBRARIES}
    ${LIBSSH_LIBRARIES}
    pthread
    xml2
    xslt
)

# Link libraries for O1 client
target_link_libraries(o1_netconf_client
    ${LIBNETCONF2_LIBRARIES}
    ${LIBYANG_LIBRARIES}
    ${OPENSSL_LIBRARIES}
    ${LIBSSH_LIBRARIES}
    pthread
    xml2
    xslt
)

# Copy configuration files
file(COPY config DESTINATION ${CMAKE_BINARY_DIR})

# Install target
install(TARGETS o1_netconf_server o1_netconf_client
    RUNTIME DESTINATION bin
)

# Install YANG models
install(FILES config/o1-interface.yang
    DESTINATION share/yang
) 